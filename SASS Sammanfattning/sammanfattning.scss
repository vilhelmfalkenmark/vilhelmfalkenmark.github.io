/*NESTING används när man vill ge komma åt alla element under ett annat. Exempelvis */

.post
{
  background-color: red;
  h1
  {
    font-size: 24px;
  }
  p
  {
    color: blue;
  }
  a
  {
    text-decoration: none;
  }
}

/*VARIABLER används när man vill definera något, exempelvis en färg, och inte vill upprepa det gång på gång. */

$primary-color: #333; /* Skapar en variabel för en färg*/
$margin: 5px; /* Variabler kan skapas till allt*/

h1 {
  font-size: 3em;
  color: #eee;
  margin: $margin 0 0 5px;
}

a {
  color: $primary-color;
}

/* @MIXIN tillsammans med @INCLUDE används när man vill definera något med en eller flera variabler som man sedan skjuter in. Nyckelordet för att få in det i elementet är @include*/


@mixin round($small, $big)
{
  border-radius: $small;
  border-top-right-radius: $big;
  border-bottom-left-radius: $big;
}

.box {
  @include round(2px, 4px);
}


/* EXTEND lägger till en "Silent Class" som inte används förrän den kallas på. Man kan även använda för att ta CSS från något som redan är definerat.*/

%bar
{
  text-decoration: none;
}

.menu {
  background: #345;
  p {
    color: cyan;
  }
}

.nav {
  @extend .menu;
  font-size: 20px;
}

h1{
  @extend %bar;
}


/* FÄRGER */

$backgroundColor: #96281B;
$textColor: complement($backgroundColor); // complement hämtar hem den exakt motsatta färgen. dvs. det som ligger på motsatt sida på färghjulet
$lighten-text-color: lighten($textColor, 20%); //lighten & darken är fördefinerat i Sass, andra nyckelord är exempelvis saturate.




/* IMPORT Ibland blir det väldigt rörigt att skriva all SASS i en fil då kan man använda sig av IMPORT.
Man skriver då SASS för olika delar av sidan i olika filer och importerar in allt till en färdig CSS fil med hjälp av IMPORT. Exempelvis */

// @import "variables.scss";
// @import "mixins.scss";



/* Med hjälp av MEDIA QUIERIES SÅ KAN VI MANIPULERA INNEHÅLLET BEROENDE PÅ VILKEN SKÄRMSTORLEK SOM ANVÄNDS. EXEMPELVIS*/

.content {
  .sidebar {
    background: #999;
    color: white;
    padding: 5px;
    float: left;
    width: 100px;
    a {
      display: block;
      color: white;
    }
  }
  .main {
    padding: 5px;
    background: #bbb;
    display: inline-block;
    width: 60%;
  }
}

@media (max-width: 480px) {
  .content {
    .sidebar {
      width: 95%;
      a {
        display: inline;
      }
    }
    .main {
      width: 95%;
    }
  }
}

/* INTERPOLATION gör att vi kan programmera innehållet med hjälp av bland annat IF satser.  */

@mixin color_class($color)
{
  .#{$color}{
    color: $color;
    background-image: url("images/#{$color}.png");

    @if$color == red
    {
      background: red;
      font-size: 100px;
      >a {
        color: blue;
      }
    };
  }
}

@include color_class(red);
@include color_class(green);
@include color_class(blue);
@include color_class(tomato);
@include color_class(pink);






